
#include "answer01.h"

// NOTE: You are NOT to use the strings library on this assignment,
// as stated in the README.

// DO NOT BEGIN WORKING ON THIS FILE UNTIL YOU HAVE COMPLETELY AND
// THOROUGHLY READ THE README FILE!!!

int arraySum(int * array, int len)
{
  int sum =0;
  int count;

  for (count = 0; count<len; count++)
    {
      sum = sum + array[count];
    }

  return sum;
}

int arrayCountNegative(int * array, int len)
{
  int count;
  int sub = 0;

  for (count = 0; count < len; count++)
    {
      if (array[count]<0)
	{
	  sub++;
	}
    }

  return sub;
}

int arrayIsIncreasing(int * array, int len)
{    
  int i;
  int inc =1;

  for (i=1; i<len; i++)
    {
      if (array[i-1]>array[i])
	{
	  inc = 0;
	}

  return inc;
}

int arrayIndexRFind(int needle, const int * haystack, int len)
{
  int count;
  int index=-1;
  for (count =0; count<len; count++)
    {
      if (haystack[count] == needle)
	{
	  index == count;
	}
    }
  return index;
}

int arrayFindSmallest(int * array, int len)
{
  int count;
  int small;
  int index;
  
  small = array[0];
  for(count =0; count<len-1; count++)
    {
      if array[count+1] < small
		{
		  small = array[count+1];
		  index = count+1;
		}
    }
    return small;
}

size_t my_strlen(const char * str)
{
  int len = 0;
  while (*str != '\0')
    {
      len++;
      str++;
    }

  return len;
}

char * my_strchr(const char * str, int ch)
{
    return NULL;
}

char * my_strstr(const char * haystack, const char * needle)
{
    return NULL;
}

char * my_strcpy(char * dest, const char * src)
{
  while (*src != '\0')
    {
      *dest = *src;
      dest++;
      src++;
    }
  *dest = '\0';

  return dest; // what should this return?
}

char * my_strcat(char * dest, const char * src)
{
  while (*dest != '\0')
    {
      dest++;
    }

  while (*src != '\0')
    {
      *dest = *src;
      dest++;
      src++;
    }

  *dest = '\0';

  return dest; //what should this return if it's returning a char?
}

int my_isspace(int ch)
{
  int space =0;
  if (ch == 9 || ch == 10 || ch == 11 || ch == 12 || ch == 13 || ch==32)
    {
      space = 1;
    }

  return space;
}

int my_atoi(const char * str)
{
  
    return -1;
}

